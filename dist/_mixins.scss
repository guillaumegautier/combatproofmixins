// combatproof mixins 1.6.2;

// added rbp-to
// added text-adjust
// removed box-sizing, column-count, colum-gap, column-rule, flex, order, transforms, transform-origin, transitions, user-select
// modified vertical-align-ghost
// linted

%clearfix {
	&::before,
	&::after {
		content: '';
		display: table;
	}

	&::after {
		clear: both;
	}

	*zoom: 1;
}

@mixin clearfix {
	&::before,
	&::after {
		content: '';
		display: table;
	}

	&::after {
		clear: both;
	}

	*zoom: 1;
}

@mixin appearance($appearance: none) {
	-webkit-appearance: $appearance;
	-moz-appearance: $appearance;

	&:-moz-focusring {
		color: transparent;
		text-shadow: 0 0 0 #000;
	}
}

@mixin border-radius($radius: 3px) {
	border-radius: $radius;
}

@mixin box-shadow($values:0 1px 2px black) {
	-webkit-box-shadow: $values;
	-moz-box-shadow: $values;
	box-shadow: $values;
}


@mixin halo($h-shadow:0, $v-shadow:0, $blur:3px, $color: white) {
	-webkit-box-shadow: $h-shadow $v-shadow $blur $color;
	-moz-box-shadow: $h-shadow $v-shadow $blur $color;
	box-shadow: $h-shadow $v-shadow $blur $color;
}

@mixin image-2x($image, $width, $height) {
	@media (min--moz-device-pixel-ratio: 1.3),
	(-o-min-device-pixel-ratio: 2.6/2),
	(-webkit-min-device-pixel-ratio: 1.3),
	(min-device-pixel-ratio: 1.3),
	(min-resolution: 1.3dppx) {
		background-image: url($image);
		background-size: $width $height;
	}
}

@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity = $opacity-ie);
}

@mixin rbp($media) {
	@if $media == xs {
		@media screen and (max-width: $bpxs) { @content; }
	}
	@else if $media == sm {
		@media screen and (min-width: $bpxs+1) { @content; }
	}
	@else if $media == md {
		@media screen and (min-width: $bpsm+1) { @content; }
	}
	@else if $media == lg {
		@media screen and (min-width: $bpmd+1) { @content; }
	}
	@else if $media == xl {
		@media screen and (min-width: $bplg+1) { @content; }
	}
}

@mixin rbp-to($media) {
	@if $media == xxs {
		@media screen and (max-width: $xxs) { @content; }
	}
	@if $media == xs {
		@media screen and (max-width: $bpxs) { @content; }
	}
	@if $media == sm {
		@media screen and (max-width: $bpsm) { @content; }
	}
	@else if $media == md {
		@media screen and (max-width: $bpmd) { @content; }
	}
	@else if $media == lg {
		@media screen and (max-width: $bplg) { @content; }
	}
	@else if $media == xl {
		@media screen and (max-width: $bpxl) { @content; }
	}
}

@function rem($pxval) {

	@if not unitless($pxval) {
		$pxval: strip-units($pxval);
	}

	$base: $em-base;
	@if not unitless($base) {
		$base: strip-units($base);
	}
	@return ($pxval / $base) * 1rem;
}

@mixin rotate ($deg) {
	@include transform(rotate(#{$deg}deg));
}

@mixin scale($scalex, $scaley) {
	@include transform(scale($scalex, $scaley));
}

@mixin skew ($x, $y) {
	@include transform(skew(#{$x}deg, #{$y}deg));
}

%stretch {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
}

@mixin stretch {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
}

@mixin text-adjust {
	-webkit-text-size-adjust : none;
}

%text-truncate {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

@mixin text-truncate {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

@mixin thumbnail($width, $height) {
	.thumbnail {
		width: $width;
		height: $height;
		position: relative;
		img {
			@extend stretch;
			max-width: 100%; max-height: 100%;
			margin: auto;
		}
	}
}

@mixin transition($properties:all, $time:0.2s, $ease:ease-out) {
	-webkit-transition: $properties $time $ease;
	-moz-transition: $properties $time $ease;
	-ms-transition: $properties $time $ease;
	-o-transition: $properties $time $ease;
	transition: $properties $time $ease;
}

@mixin translate ($x, $y) {
	@include transform(translate($x, $y));
}

@mixin vertical-align-ghost {
	&::before {
		content: '';
		display: inline-block;
		height: 100%;
		vertical-align: middle;
	}

	> * {display: inline-block; vertical-align: middle;}
}

@mixin vertical-align-transform {
	position: relative;
	left: 50%;
	top: 50%;
	-webkit-transform: translate(-50%,-50%);
	-moz-transform: translate(-50%,-50%);
	-ms-transform: translate(-50%,-50%);
	-o-transform: translate(-50%,-50%);
	transform: translate(-50%,-50%);
}